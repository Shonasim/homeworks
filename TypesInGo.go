package main

import "fmt"

// Определение возраста совершеннолетия
// Определите тип Age на основе int. Напишите функцию, которая принимает возраст и возвращает сообщение о том,
// является ли человек совершеннолетним (возраст 18 лет и старше) или нет.
// Задача 2
// Проверка на четность
// Определите тип Number на основе int. Напишите функцию, которая принимает число и возвращает сообщение о том,
// является ли оно четным или нечетным.
// Задача 3
// Проверка допустимого диапазона
// Определите тип Score на основе int. Напишите функцию, которая принимает оценку и возвращает сообщение,
// находится ли она в допустимом диапазоне от 0 до 100
// Задача4
// Арифметические операции
// Определите тип функции Operation, которая принимает два int и возвращает int. Напишите функции для сложения,
// вычитания и умножения. Используйте тип Operation для вызова этих функций
// middle
// Обратный отсчет
// Создайте псевдоним для типа int под названием Count. Напишите функцию, которая принимает Count и выводит
// обратный отсчет до нуля.
type Age int
type Number int
type Score int

// псевдонимы
type Count = int

func uncount(count Count) {
	var i Count
	for i = count; i > 0; i-- {
		fmt.Println(i)
	}
}

// именованные типы
func rec(age Age) string {
	if age >= 18 {
		return "Соверешеннолетний"
	}
	return "неСоверешеннолетний"
}
func take(num Number) string {
	if num%2 == 0 {
		return "Чётное"
	}
	return "нечётное"
}
func gpa(score Score) string {
	if 0 < score && score < 100 {
		return "В допустимом значении"
	}
	return "не в допустимом значении"
}

func main() {
	//var age Age = 20
	//fmt.Println(rec(age))
	//var num Number = 2
	//fmt.Println(take(num))
	//var score Score = 2
	//fmt.Println(gpa(score))
	var unc Count = 5
	uncount(unc)

}
